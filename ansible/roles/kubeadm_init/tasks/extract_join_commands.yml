- name: Extract control plane join command
  ansible.builtin.shell: |
    awk '/kubeadm join/ {print; getline; print; getline; print}' /tmp/kubeadm_init_output.log | head -n 3 | sed 's/\\//g'
  args:
    executable: /bin/bash
  become: yes
  register: control_plane_join
  changed_when: true

- name: Save control plane join command to file
  ansible.builtin.copy:
    content: "{{ control_plane_join.stdout }}"
    dest: /tmp/control-plane-join.sh
    mode: '0644'
  become: yes

- name: Extract and sanitize worker join command
  ansible.builtin.shell: |
    awk '
    /Then you can join any number of worker nodes by running the following on each/ {
        found=1
        next
    }
    found { print }
    ' /tmp/kubeadm_init_output.log | tr -d '\\\n' | sed 's/  */ /g' | sed 's/^ *//;s/ *$//'
  register: worker_join
  changed_when: false

- name: Clean up worker join command
  ansible.builtin.set_fact:
    worker_join_cleaned: "{{ hostvars[groups['prime_control'][0]]['worker_join'] | regex_replace('\\\n', '') | regex_replace(' +', ' ') | trim }}"


- name: Save worker join command to file
  ansible.builtin.copy:
    content: "{{ worker_join.stdout }}"
    dest: /tmp/worker-join.sh
    mode: '0644'
  become: yes

- name: Read extracted control-plane join command
  ansible.builtin.slurp:
    src: /tmp/control-plane-join.sh
  register: control_plane_join
  become: yes

- name: Read extracted worker join command
  ansible.builtin.slurp:
    src: /tmp/worker-join.sh
  register: worker_join
  become: yes

- name: Store join commands as Ansible facts
  ansible.builtin.set_fact:
    control_plane_join: "{{ control_plane_join['content'] | b64decode | trim }}"
    worker_join: "{{ worker_join['content'] | b64decode | trim }}"

